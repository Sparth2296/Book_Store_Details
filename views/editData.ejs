<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Book</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .container {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            overflow: hidden;
            max-width: 700px;
            width: 100%;
            animation: slideIn 0.8s ease-out;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .form-section {
            padding: 40px;
            background: rgba(255, 255, 255, 0.95);
        }

        .form-header {
            text-align: center;
            margin-bottom: 30px;
            animation: fadeInDown 0.8s ease-out 0.3s both;
        }

        @keyframes fadeInDown {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .form-title {
            font-size: 28px;
            color: #333;
            margin-bottom: 8px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .form-subtitle {
            color: #666;
            font-size: 14px;
        }

        .form-group {
            margin-bottom: 25px;
            animation: fadeInUp 0.6s ease-out both;
        }

        .form-group:nth-child(2) { animation-delay: 0.1s; }
        .form-group:nth-child(3) { animation-delay: 0.2s; }
        .form-group:nth-child(4) { animation-delay: 0.3s; }
        .form-group:nth-child(5) { animation-delay: 0.4s; }
        .form-group:nth-child(6) { animation-delay: 0.5s; }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #555;
            font-weight: 600;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        input[type="text"],
        input[type="number"],
        input[type="file"] {
            width: 100%;
            padding: 15px;
            border: 2px solid #e0e0e0;
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.8);
        }

        input[type="text"]:focus,
        input[type="number"]:focus {
            outline: none;
            border-color: #667eea;
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.2);
            background: white;
        }

        input[type="file"] {
            border: 2px dashed #e0e0e0;
            background: rgba(248, 250, 252, 0.8);
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 15px;
        }

        input[type="file"]:hover {
            border-color: #667eea;
            background: rgba(102, 126, 234, 0.05);
        }

        .image-section {
            margin-bottom: 25px;
            animation: fadeInUp 0.6s ease-out 0.5s both;
        }

        .images-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-top: 15px;
        }

        .image-preview-box {
            border: 2px solid #e0e0e0;
            border-radius: 12px;
            padding: 15px;
            background: rgba(248, 250, 252, 0.8);
            transition: all 0.3s ease;
        }

        .image-preview-box h4 {
            text-align: center;
            margin-bottom: 15px;
            color: #555;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .current-image-box {
            border-color: #28a745;
            background: rgba(40, 167, 69, 0.05);
        }

        .current-image-box h4 {
            color: #28a745;
        }

        .new-image-box {
            border-color: #ffc107;
            background: rgba(255, 193, 7, 0.05);
        }

        .new-image-box h4 {
            color: #ffc107;
        }

        .image-preview {
            width: 100%;
            min-height: 200px;
            border: 2px dashed #e0e0e0;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: white;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .image-preview.has-image {
            border-color: #667eea;
        }

        .preview-placeholder {
            text-align: center;
            color: #999;
            padding: 20px;
        }

        .preview-placeholder svg {
            color: #ccc;
            margin-bottom: 10px;
        }

        .preview-placeholder p {
            font-size: 12px;
            margin: 0;
        }

        .preview-img {
            max-width: 100%;
            max-height: 200px;
            border-radius: 6px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .preview-img:hover {
            transform: scale(1.02);
        }

        .remove-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            width: 25px;
            height: 25px;
            border-radius: 50%;
            background: rgba(255, 99, 99, 0.9);
            color: white;
            border: none;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
            font-weight: bold;
            transition: all 0.3s ease;
        }

        .remove-btn:hover {
            background: #ff6b6b;
            transform: scale(1.1);
        }

        .submit-btn {
            width: 100%;
            padding: 18px;
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
            position: relative;
            overflow: hidden;
        }

        .submit-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(40, 167, 69, 0.4);
        }

        .submit-btn:active {
            transform: translateY(-1px);
        }

        .submit-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            transition: left 0.5s ease;
        }

        .submit-btn:hover::before {
            left: 100%;
        }

        /* Loading state */
        .loading {
            pointer-events: none;
            opacity: 0.7;
        }

        .loading .submit-btn {
            background: #ccc;
        }

        .add-link {
            text-align: center;
            margin-top: 20px;
            animation: fadeInUp 0.6s ease-out 0.6s both;
        }

        .add-link a {
            color: #667eea;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .add-link a:hover {
            color: #764ba2;
            text-decoration: underline;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .container {
                margin: 10px;
            }
            
            .form-section {
                padding: 30px;
            }

            .images-container {
                grid-template-columns: 1fr;
                gap: 15px;
            }
        }

        /* Status indicators */
        .status-indicator {
            display: inline-block;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            margin-right: 8px;
        }

        .status-current {
            background: #28a745;
            animation: pulse 2s infinite;
        }

        .status-new {
            background: #ffc107;
            animation: pulse 2s infinite 0.5s;
        }

        @keyframes pulse {
            0%, 100% {
                opacity: 1;
            }
            50% {
                opacity: 0.5;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="form-section">
            <div class="form-header">
                <h1 class="form-title">Edit Book</h1>
                <p class="form-subtitle">Update the book details and image</p>
            </div>

            <form action="/editBook/<%= EditDataById.id%>" method="post" enctype="multipart/form-data" id="editBookForm">
                <div class="form-group">
                    <label for="bookName">Book Name</label>
                    <input type="text" id="bookName" name="bookName" value="<%=EditDataById.bookName%>" required placeholder="Enter the book title">
                </div>

                <div class="form-group">
                    <label for="autherName">Author Name</label>
                    <input type="text" id="autherName" name="autherName" value="<%=EditDataById.autherName%>" required placeholder="Enter author's name">
                </div>

                <div class="form-group">
                    <label for="discreption">Description</label>
                    <input type="text" id="discreption" name="discreption" value="<%=EditDataById.discreption%>" required placeholder="Brief description of the book">
                </div>

                <div class="form-group">
                    <label for="price">Price ($)</label>
                    <input type="number" id="price" name="price" value="<%=EditDataById.price%>" required placeholder="0.00" step="0.01" min="0">
                </div>

                <div class="image-section">
                    <label>Book Cover Images</label>
                    <input type="file" id="bookImage" name="bookImage" accept="image/*">
                    
                    <div class="images-container">
                        <!-- Current Image -->
                        <div class="image-preview-box current-image-box">
                            <h4><span class="status-indicator status-current"></span>Current Image</h4>
                            <div class="image-preview has-image">
                                <img src="/<%= EditDataById.bookImage%>" alt="Current book cover" class="preview-img" id="currentImg">
                            </div>
                        </div>

                        <!-- New Image Preview -->
                        <div class="image-preview-box new-image-box">
                            <h4><span class="status-indicator status-new"></span>New Image</h4>
                            <div class="image-preview" id="newImagePreview">
                                <div class="preview-placeholder">
                                    <svg width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
                                        <circle cx="8.5" cy="8.5" r="1.5"/>
                                        <polyline points="21,15 16,10 5,21"/>
                                    </svg>
                                    <p>Select new image to see preview</p>
                                </div>
                                <img id="newPreviewImg" class="preview-img" style="display: none;" alt="New book cover preview">
                                <button type="button" id="removeNewImage" class="remove-btn" style="display: none;">×</button>
                            </div>
                        </div>
                    </div>
                </div>

                <button type="submit" class="submit-btn">
                    Update Book Details
                </button>
            </form>

            <div class="add-link">
                <a href="#" onclick="goToAddForm()">Want to add a new book instead? Click here</a>
            </div>
        </div>
    </div>

    <script>
        // Form submission animation
        document.getElementById('editBookForm').addEventListener('submit', function(e) {
            const form = this;
            const submitBtn = form.querySelector('.submit-btn');
            
            submitBtn.innerHTML = 'Updating Book... ✨';
            form.classList.add('loading');
            
            setTimeout(() => {
                if (form.classList.contains('loading')) {
                    submitBtn.innerHTML = 'Update Book Details';
                    form.classList.remove('loading');
                }
            }, 3000);
        });

        // Input animations
        const inputs = document.querySelectorAll('input[type="text"], input[type="number"]');
        inputs.forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.style.transform = 'scale(1.02)';
            });
            
            input.addEventListener('blur', function() {
                this.parentElement.style.transform = 'scale(1)';
            });
        });

        // New image preview functionality
        const fileInput = document.getElementById('bookImage');
        const newImagePreview = document.getElementById('newImagePreview');
        const newPreviewImg = document.getElementById('newPreviewImg');
        const removeBtn = document.getElementById('removeNewImage');
        const placeholder = newImagePreview.querySelector('.preview-placeholder');

        fileInput.addEventListener('change', function(e) {
            const file = e.target.files[0];
            
            if (file) {
                const reader = new FileReader();
                
                reader.onload = function(e) {
                    newPreviewImg.src = e.target.result;
                    newPreviewImg.style.display = 'block';
                    removeBtn.style.display = 'flex';
                    placeholder.style.display = 'none';
                    newImagePreview.classList.add('has-image');
                    
                    // Add glow effect to new image box
                    const newImageBox = document.querySelector('.new-image-box');
                    newImageBox.style.borderColor = '#28a745';
                    newImageBox.style.background = 'rgba(40, 167, 69, 0.1)';
                    newImageBox.querySelector('h4').style.color = '#28a745';
                    
                    // Animation
                    newPreviewImg.style.opacity = '0';
                    setTimeout(() => {
                        newPreviewImg.style.transition = 'opacity 0.3s ease';
                        newPreviewImg.style.opacity = '1';
                    }, 50);
                };
                
                reader.readAsDataURL(file);
            }
        });

        removeBtn.addEventListener('click', function() {
            fileInput.value = '';
            newPreviewImg.style.display = 'none';
            removeBtn.style.display = 'none';
            placeholder.style.display = 'block';
            newImagePreview.classList.remove('has-image');
            newPreviewImg.src = '';
            
            // Reset new image box styling
            const newImageBox = document.querySelector('.new-image-box');
            newImageBox.style.borderColor = '#ffc107';
            newImageBox.style.background = 'rgba(255, 193, 7, 0.05)';
            newImageBox.querySelector('h4').style.color = '#ffc107';
        });

        // Placeholder function for add form
        function goToAddForm() {
            alert('Redirecting to Add Book form! 📚');
        }

        // Add some interactive particles
        function createParticle() {
            const particle = document.createElement('div');
            particle.style.position = 'fixed';
            particle.style.width = '3px';
            particle.style.height = '3px';
            particle.style.backgroundColor = '#28a745';
            particle.style.borderRadius = '50%';
            particle.style.pointerEvents = 'none';
            particle.style.opacity = '0.6';
            particle.style.left = Math.random() * window.innerWidth + 'px';
            particle.style.top = window.innerHeight + 'px';
            particle.style.transition = 'transform 4s ease-out, opacity 4s ease-out';
            
            document.body.appendChild(particle);
            
            setTimeout(() => {
                particle.style.transform = 'translateY(-' + (window.innerHeight + 100) + 'px)';
                particle.style.opacity = '0';
            }, 100);
            
            setTimeout(() => {
                if (document.body.contains(particle)) {
                    document.body.removeChild(particle);
                }
            }, 4100);
        }

        // Create particles occasionally
        setInterval(createParticle, 3000);

        // Current image hover effect
        const currentImg = document.getElementById('currentImg');
        currentImg.addEventListener('mouseenter', function() {
            this.style.transform = 'scale(1.05)';
            this.style.filter = 'brightness(1.1)';
        });

        currentImg.addEventListener('mouseleave', function() {
            this.style.transform = 'scale(1)';
            this.style.filter = 'brightness(1)';
        });
    </script>
</body>
</html>